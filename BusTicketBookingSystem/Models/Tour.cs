//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BusTicketBookingSystem.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class Tour
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Tour()
        {
            this.Reservations = new HashSet<Reservation>();
        }
    
        public int TourId { get; set; }
        public System.DateTime TourDate { get; set; }
        public int CityId { get; set; }
        public string Departure { get; set; }
        public string Arrival { get; set; }
        public int BusId { get; set; }
        public int SeatsAvailable { get; set; }
        public decimal Price { get; set; }
    
        public virtual Bus Bus { get; set; }
        public virtual City City { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Reservation> Reservations { get; set; }

        #region Methods
        public void ConfigureSeats(int BusId)
        {
            TicketBookingModelEntities db = new TicketBookingModelEntities();

            var bus = db.Buses.Find(BusId);

            this.SeatsAvailable = bus.NrSeats;
        }

        public bool NewReservation(int id, string un)
        {
            TicketBookingModelEntities db = new TicketBookingModelEntities();
            Tour tour = db.Tours.Find(id);

            if (tour != null)
            {
                if (tour.SeatsAvailable > 0)
                {
                    Reservation res = new Reservation
                    {
                        ReservationDate = DateTime.Now,
                        TourId = tour.TourId,
                        UserName = un
                    };
                    tour.SeatsAvailable--;
                    db.Reservations.Add(res);
                     db.SaveChangesAsync();
                    return true;
                }
            }
            return false;
        }
        #endregion
    }
}
